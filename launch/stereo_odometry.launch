<launch>

    <!--
        The purpose of this launch file is conversion of raw stereo into stereo odometry, consumed by the EKF and rtab map.
        There are three stages to this conversion:
            (1) decompress the raw stereo images
            (2) rectify the unrectified (fisheye) images
            (3) convert the rectified images to odometry
    -->

    <!-- (1) DECOMPRESS STEREO IMAGES -->
    <group ns="/elp">
        <node name="republish_left" type="republish" pkg="image_transport" args="compressed in:=/elp/left/image_raw raw out:=/elp/left/image_raw" />
        <node name="republish_right" type="republish" pkg="image_transport" args="compressed in:=/elp/right/image_raw raw out:=/elp/right/image_raw" />
    </group>

    <!-- (2) RECTIFY STEREO IMAGES -->
    <group ns="/elp">
        <node pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc" output="screen">
            <!-- SUBSCRIBE to: left/right decompressed stereo images, left/right camera info -->
            <remap from="left/image_raw"    to="/elp/left/image_raw"/>
            <remap from="left/camera_info"  to="/elp/left/camera_info"/>
            <remap from="right/image_raw"   to="/elp/right/image_raw"/>
            <remap from="right/camera_info" to="/elp/right/camera_info"/>

            <!-- PUBLISH to: left/right rectified stereo -->

            <param name="disparity_range" value="128"/>
        </node>
    </group>

    <!-- (3) CONVERT TO ODOMETRY -->
    <node pkg="rtabmap_ros" type="stereo_odometry" name="stereo_odometry" output="screen">
        <param name="approx_sync" value="true"/>

        <!-- SUBSCRIBE to: left/right rectified image, left/right camera info -->
        <remap from="left/image_rect"       to="/elp/left/image_rect"/>
        <remap from="right/image_rect"      to="/elp/right/image_rect"/>
        <remap from="left/camera_info"      to="/elp/left/camera_info"/>
        <remap from="right/camera_info"     to="/elp/right/camera_info"/>

        <!-- PUBLISH to: stereo odometry -->
        <remap from="odom"                  to="/stereo_odometry"/>

        <!--note, for stereo_odometry to publish, we require the transform hierarchy from:
                base_link->|left_cam_frame|
                base_link->|right_cam_frame
            this tree is currently published by robot_state.launch
        -->
        <param name="frame_id" type="string" value="base_link"/>
        <param name="odom_frame_id" type="string" value="odom"/>
    </node>
</launch>